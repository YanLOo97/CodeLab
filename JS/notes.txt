document.write("<h3>Happy Coding!!</h3>");
alert("Hello World");
confirm("do u confirm?");
prompt("type any");

Constructor
function Student(name, date_of_birth, email) {
  this.name = name;
  this.date_of_birth = date_of_birth;
  this.email = email;
  can write function here.
}

prototype
Student.prototype.info = function () {
  return `NAME: ${this.name} DATE of BIRTH: ${this.date_of_birth} EMAIL: ${this.email}`;
};

Student.prototype.age = function () {
  const age = new Date().getFullYear() - this.date_of_birth;
  return age;
};

inheritence
function Teacher(name, date_of_birth, email) {
  Student.call(this, name, date_of_birth, email);
}
Teacher.prototype = Object.create(Student.prototype); //prototype inheritence

Class Extend
class book {
  constructor(title, author, year) {
    this.title = title;
    this.author = author;
    this.year = year;
  }
  getTitle() {
    return `${this.title}`;
  }
  static getYear() {
    return `${this.year}`;
  }
}

class textbook extends book {
  constructor(title, author, year) {
    super(title, author, year);
  }
}
let grade11 = new textbook("Biology", "MSC", "2010");
console.log(grade11.getYear());
outputs:

DOM
document.getElementById("id_name") //return id's tag
document.getElementByClassName("ClassName") //return class's html collection, to get tag[0]
document.getElementByTagName("tag") //return tags array
document.querySelector(".or#") //like CSS selector

EventListener
document.getElementById("id_name").addEventListener("event type", function() {});
